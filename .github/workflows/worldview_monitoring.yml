name: Worldview Monitoring System

on:
  schedule:
    # 10분마다 실행
    - cron: '*/10 * * * *'

  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12'

jobs:
  # =======================================
  # Job 1: 크롤링 & 분석
  # =======================================
  crawl_and_analyze:
    name: Crawl & Analyze New Contents
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Collect new posts from DC Gallery
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        python scripts/collect_500_posts.py

    - name: Process new contents with GPT-5 (fallback to GPT-4o)
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        python process_new_contents.py
      continue-on-error: true

    - name: Generate report
      if: always()
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      run: |
        echo "## 📊 Worldview Monitoring Report" >> $GITHUB_STEP_SUMMARY
        echo "Time: $(date)" >> $GITHUB_STEP_SUMMARY
        python -c "
        from supabase import create_client
        import os
        from datetime import datetime, timedelta

        supabase = create_client(
            os.getenv('SUPABASE_URL'),
            os.getenv('SUPABASE_SERVICE_KEY')
        )

        # Total stats
        contents = supabase.table('contents').select('id').execute()
        perceptions = supabase.table('layered_perceptions').select('id').execute()
        worldviews = supabase.table('worldviews').select('id, title').execute()
        links = supabase.table('perception_worldview_links').select('id').execute()

        print(f'### 전체 현황')
        print(f'- Contents: {len(contents.data)}')
        print(f'- Perceptions: {len(perceptions.data)}')
        print(f'- Worldviews: {len(worldviews.data)}')
        print(f'- Links: {len(links.data)}')
        print(f'')

        # Recent additions (last 10 minutes)
        since = (datetime.now() - timedelta(minutes=10)).isoformat()

        new_contents = supabase.table('contents').select('id').gte('created_at', since).execute()
        new_perceptions = supabase.table('layered_perceptions').select('id').gte('extracted_at', since).execute()

        print(f'### 최근 10분')
        print(f'- 새 글: {len(new_contents.data)}')
        print(f'- 새 분석: {len(new_perceptions.data)}')
        print(f'')

        # Top worldviews
        wv_stats = []
        for wv in worldviews.data[:5]:
            wv_links = supabase.table('perception_worldview_links').select('id').eq('worldview_id', wv['id']).execute()
            wv_stats.append((wv['title'], len(wv_links.data)))

        wv_stats.sort(key=lambda x: x[1], reverse=True)

        print(f'### 주요 세계관')
        for title, count in wv_stats[:3]:
            print(f'- {title}: {count}개 인식')
        " >> $GITHUB_STEP_SUMMARY

  # =======================================
  # Job 2: Vercel 배포 트리거
  # =======================================
  trigger_vercel_deploy:
    name: Trigger Vercel Deployment
    runs-on: ubuntu-latest
    needs: crawl_and_analyze
    if: success()

    steps:
    - name: Trigger Vercel deploy hook
      run: |
        curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK }}"

    - name: Deployment triggered
      run: |
        echo "## 🚀 Vercel Deployment" >> $GITHUB_STEP_SUMMARY
        echo "Deployment triggered successfully" >> $GITHUB_STEP_SUMMARY
        echo "Dashboard will be updated in ~2 minutes" >> $GITHUB_STEP_SUMMARY
